/*
 *  반복문 : 유사한 내용이 여러번 반복할 때 주로 사용
 *  	     영화목록, 맛집목록, 메인 화면 .. 상세보기 (if)
 *  		 페이징
 *  
 *  종류 : 
 *        반복횟수가 정해져 있는 경우 : for
 *        반복횟수가 정해지지 않는 경우: while
 *        한번 이상 수행이 가능 : do~while
 *        -----------------------------
 *        자바 : 출력,제어 => for(2차, 중첩)
 *        	    데이터베이스, 네트워크, => while(1차)
 *        
 *  형식) for
 *   		for(초기값;조건식;증가식) //조건식이 false면 종료
 *   		{
 *   			반복 수행문장
 *   		}
 *       while
 *       --------------
 *       초기값------------- 1
 *       while(조건문)---------2 ===> 수행을 못할 수도 있다
 *       {
 *         반복문장 수행문장--------3
 *         증가식-------------------4 => 2번이동(true수행, false면 종료)
 *       }
 *       ----------------
 *       do~while
 *       초기값----- 1
 *       do{
 *          반복 수행문장----- 2    ====> 한번 이상 무조선 수행
 *          증가식 -----3
 *       
 *       }while(조건문);-------4
 *       
 *       for=> 2차
 *       
 */
public class 반복문_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		String[] food= {
//				"버섯으로 관자 느낌 내는 방법! 새송이버섯간장버터구이 만들기",
//				"아삭아삭한 고추된장박이",
//				"달콤 짭조름♡ 떡 베이컨 간장조림♡",
//				"시래기갈치조림 고추장 양념장 저녁메인반찬 추천",
//				"새송이버섯버터굴소스볶음 간단반찬",
//		};
//		String[] chef= {
//				"루던",
//				"돌하우스",
//				"dddd516",
//				"요블리",
//				"해피레시피류이",
//		};
//		for(int i=0;i<5;i++)
//		{
//			System.out.println(food[i]+"("+chef[i]+")");
//		}
		
		/*        1     2    4
		 *  for(초기값;조건식;증가식)
		 *  {           
		 *    반복 수행문장  3
		 *  }
		 *  
		 *  1-2-3-4
		 *    2-3-4
		 *    ...
		 *    2-3-4
		 *    --false면 종료
		 *    
		 *    ==>지역변수(블록변수) =>  스택 (메모리에 의해 자동 삭제)
		 *  
		 */
		
		
		for(int i=1;i<=10;i++) //i를 괄호 밖에서 사용하려면 int를 for문 밖에서 선언하기
		{
			
			System.out.print(i+" ");
		}
		
		System.out.println("\n=================");
		//A~Z출력 => 문제 A를 26개 출력
//		for(char c='A';c<="Z";c++)
//		{
//			System.out.println(c+" ");
//		}
//		
	
	   for(int i=0;i<26;i++)
	   {   
		   char c='A';
		   System.out.print(c++ + " ");
	   }
	   System.out.println("\n============");
	   System.out.println("======while=====");
	   /*
	    *  while => 형식
	    *  초기값 ---------1
	    *  while(조건식) ----2
	    *  {
	    *   반복 수행문장 --- 3
	    *   증가식 -----------4
	    *  }
	    *  
	    *  1-2-3-4
	    *    2-3-4
	    *    --- 2번 false면 종료
	    *    => 무한루프 (네트워크 서버, 데이터베이스 값 읽기, 파일 읽기)
	    *    => 파일읽기 => -1(EOF)
	    */
		
		//1~10
	   int i=1;// 초기값 (시작점)
	   while(i<=10)// 조건식 (종료점) => i가 10이 되면 종료
	   {
		   System.out.print(i+" ");
		   i++; //제어 1에서 10까지 ==> 증가 (종료시까지 제어점)
	   }
	   System.out.println("\n================");
	   char c='A';
	   i=0;
	   while(i<26)
	   {
		   System.out.print(c++ + " ");
		   i++;
	   }
	   System.out.println("\n========= do ~while======");
	   /*
	    *  do~while : 후조건 => 무조건 한번은 수행
	    *  형식)
	    *  		초기값
	    *       do
	    *       {
	    *         반복실행문장 ==> 2
	    *         증가식 ===> 3
	    *       }while(조건식 ==> 4 ==> true=>2번인동
	    *       					   false=> 종료
	    *       
	    *       int i=1;
	    *       do
	    *       {
	    *        System.out.print(i+" ");
	    *        => 1
	    *        i++;
	    *        =>
	    *       }while(i<=10);   //do whiled은 선 증가 후 조건 검색을 한다
	    *       
	    */
	   
	   i=1;
	   do {
		   System.out.print(i+" ");
		   i++;
		   
	   }while(i<=10);
	   System.out.println("\n=============");
	   c='A';
	   i=0;
	   do
	   {
		 System.out.print(c++ +" "); 
		 i++;// 이것으로 인해 무한루프 방지
		 
	   }while(i<26);
		
		
		
		
		
		
		
		
		
		
	}

}
